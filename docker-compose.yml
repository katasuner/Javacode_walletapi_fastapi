services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      retries: 5
      start_period: 10s
    command: >
      postgres
      -c password_encryption=scram-sha-256
      -c max_connections=100
      -c work_mem=8MB
      -c shared_buffers=128MB
      -c effective_cache_size=256MB

  pgbouncer:
    image: edoburu/pgbouncer
    restart: always
    environment:
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      AUTH_TYPE: ${AUTH_TYPE}
      POOL_MODE: ${POOL_MODE}
      MAX_CLIENT_CONN: ${MAX_CLIENT_CONN}
      DEFAULT_POOL_SIZE: ${DEFAULT_POOL_SIZE}
      LISTEN_PORT: ${LISTEN_PORT}
    ports:
      - "6432:6432"
    depends_on:
      db:
        condition: service_healthy

  app:
    build: .
    depends_on:
      pgbouncer:
        condition: service_started
      redis:
        condition: service_started
    environment:
      DATABASE_URL: ${DATABASE_URL}
    command: gunicorn -w 2 -k uvicorn.workers.UvicornWorker -b 0.0.0.0:8000 main:app
    ports:
      - "8080:8000"
    logging:
      driver: "none"

  liquibase:
    image: liquibase/liquibase:4.23.2
    depends_on:
      - pgbouncer
    volumes:
      - ./liquibase:/liquibase/changelog
    working_dir: /liquibase/changelog
    command: >
      --url=jdbc:postgresql://pgbouncer:6432/${DB_NAME}
      --username=${DB_USER}
      --password=${DB_PASSWORD}
      --changeLogFile=changelog.xml
      update

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"

  worker:
    build: .
    depends_on:
      - db
      - redis
      - pgbouncer
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
    command: [ "python", "worker.py" ]
    logging:
      driver: "none"

volumes:
  pg_data:
